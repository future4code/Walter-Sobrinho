{"version":3,"sources":["img/favorite-white.svg","img/favorite.svg","img/comment_icon.svg","components/IconeComContador/IconeComContador.js","components/SecaoComentario/SecaoComentario.js","components/Post/Post.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","IconeComContador","props","className","alt","src","icone","onClick","onClickIcone","valorContador","SecaoComentario","state","value","onChangeComentario","event","setState","target","console","log","placeholder","this","onChange","aoEnviar","Component","Post","curtido","numeroCurtidas","comentando","numeroComentarios","onClickCurtida","onClickComentario","aoEnviarComentario","iconeCurtida","componenteComentario","iconeCoracaoPreto","iconeCoracaoBranco","fotoUsuario","nomeUsuario","fotoPost","iconeComentario","React","ContainerPagina","styled","div","ContainerPosts","ContainerForm","listaDePosts","map","post","App","valores","valorInputNome","valorInputFoto","valorInputImagem","nomeUsuarioOnChange","fotoPerfilOnChange","imagemUploadonChange","EnviarForm","push","listaDePostsAtualizada","items","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5e446c1f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/favorite-white.042aa417.svg\";","module.exports = __webpack_public_path__ + \"static/media/favorite.4c67d875.svg\";","module.exports = __webpack_public_path__ + \"static/media/comment_icon.de299b47.svg\";","import React from 'react'\nimport './IconeComContador.css'\n\nexport function IconeComContador(props) {\n\treturn <div className={'icon-container'}>\n\t\t<img alt={'Icone'} src={props.icone} onClick={props.onClickIcone}/>\n\t\t<p>{props.valorContador}</p>\n\t</div>\n}\n","import React, {Component} from 'react'\nimport './SecaoComentario.css'\n\nexport class SecaoComentario extends Component {\n\tstate = {\n\tvalue: \"\",\n\t}\n\n\tonChangeComentario = (event) => {\n\t\tthis.setState({value: event.target.value})\n\t\tconsole.log(this.state.value)\n\t}\n\n\trender() {\n\t\treturn <div className={'comment-container'}>\n\t\t\t\n\t\t\t<input\n\t\t\t\tclassName={'input-comentario'}\n\t\t\t\tplaceholder={'Comentário'}\n\t\t\t\tvalue={this.state.value}\n\t\t\t\tonChange={this.onChangeComentario}\n\t\t\t/>\n\t\t\t<button onClick={this.props.aoEnviar}>Enviar</button>\n\t\t</div>\n\t}\n}\n","import React from 'react'\nimport './Post.css'\n\nimport {IconeComContador} from '../IconeComContador/IconeComContador'\n\nimport iconeCoracaoBranco from '../../img/favorite-white.svg'\nimport iconeCoracaoPreto from '../../img/favorite.svg'\nimport iconeComentario from '../../img/comment_icon.svg'\nimport {SecaoComentario} from '../SecaoComentario/SecaoComentario'\n\nclass Post extends React.Component {\n  state = {\n    curtido: false,\n    numeroCurtidas: 0,\n    comentando: false,\n    numeroComentarios: 0\n  }\n\n  onClickCurtida = () => {\n    if (this.state.curtido) {\n      this.state.numeroCurtidas = this.state.numeroCurtidas - 1 \n    } else {\n      this.state.numeroCurtidas = this.state.numeroCurtidas + 1 \n    }\n    this.setState({\n      curtido: !this.state.curtido     \n    })\n  }\n\n  onClickComentario = () => {\n    this.setState({\n      comentando: !this.state.comentando\n    })\n  }\n\n  aoEnviarComentario = () => {\n    this.setState({\n      comentando: false,\n      numeroComentarios: this.state.numeroComentarios + 1      \n    })\n  }\n\n  render() {\n    let iconeCurtida\n    if(this.state.curtido) {\n      iconeCurtida = iconeCoracaoPreto\n      \n    } else {\n      iconeCurtida = iconeCoracaoBranco\n    }\n\n    let componenteComentario\n\n    if(this.state.comentando) {\n      componenteComentario = <SecaoComentario aoEnviar={this.aoEnviarComentario}/>\n    }\n\n    return <div className={'post-container'}>\n      <div className={'post-header'}>\n        <img className={'user-photo'} src={this.props.fotoUsuario} alt={'Imagem do usuario'}/>\n        <p>{this.props.nomeUsuario}</p>\n      </div>\n\n      <img className={'post-photo'} src={this.props.fotoPost} alt={'Imagem do post'}/>\n\n      <div className={'post-footer'}>\n        <IconeComContador\n          icone={iconeCurtida}\n          onClickIcone={this.onClickCurtida}\n          valorContador={this.state.numeroCurtidas}\n        />\n\n        <IconeComContador\n          icone={iconeComentario}\n          onClickIcone={this.onClickComentario}\n          valorContador={this.state.numeroComentarios}\n        />\n      </div>\n      {componenteComentario}\n    </div>\n  }\n}\n\nexport default Post","import React from 'react';\nimport './App.css';\nimport Post from './components/Post/Post';\nimport styled from 'styled-components'\n\n//Estilização\nconst ContainerPagina = styled.div `\ndisplay: grid;\ngrid-template-columns: 1fr 3fr;\nmargin-top: 30px;\njustify-content: center;\n`\nconst ContainerPosts = styled.div `\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  align-items: center;\n`\nconst ContainerForm = styled.div `\ndisplay: flex;\nflex-direction: column;\n`\n\n//Arrays\nconst listaDePostsInicial = [\n  {\n    nomeUsuario: \"paulinha\",\n    fotoUsuario: \"https://picsum.photos/50/50?a=1\",\n    fotoPost: \"https://picsum.photos/200/150?a=7\"\n  },\n  {\n    nomeUsuario: \"Dorival_Caymmi\",\n    fotoUsuario: \"https://picsum.photos/50/50?a=2\",\n    fotoPost: \"https://picsum.photos/200/150?a=5\"\n  },\n  {\n    nomeUsuario: \"Billie Holiday\",\n    fotoUsuario: \"https://picsum.photos/50/50?a=3\",\n    fotoPost: \"https://picsum.photos/200/150?a=6\"\n  }\n]\nconst listaDePosts = listaDePostsInicial.map((post) => {\n  return (\n    <Post\n    nomeUsuario={post.nomeUsuario}\n    fotoUsuario={post.fotoUsuario}\n    fotoPost={post.fotoPost}\n    />\n  )\n}\n)\n//Inputs\n\n\nclass App extends React.Component {\nstate = {\n  valores: [\n  <Post/>,\n  {    \n      valorInputNome: \"\",\n      valorInputFoto: \"\",\n      valorInputImagem: \"\"  \n  }\n] \n}\n  //Funções dos Inputs\n\n  nomeUsuarioOnChange = event => {\n    this.setState({valorInputNome : event.target.value}) \n  }\n\n  fotoPerfilOnChange = event => {\n    this.setState({valorInputFoto : event.target.value})\n  }\n\n  imagemUploadonChange = event => {\n    this.setState({valorInputImagem : event.target.value})\n  }\n\n  EnviarForm = () => {\n    listaDePosts.push(\n    <Post\n    nomeUsuario={this.state.valorInputNome}\n    fotoUsuario={this.state.valorInputFoto}\n    fotoPost={this.state.valorInputImagem}\n    />\n    )\n    this.setState({})\n  }\n\n  render () {\nconst listaDePostsAtualizada = listaDePosts.map((items) => {\nreturn items\n}\n)\n    function Print () {\n      console.log(listaDePostsAtualizada)\n    }\n    return (\n    <ContainerPagina>\n      <ContainerForm>\n        <h2>Novo Post</h2>\n        <input \n        value={this.state.valorInputNome}\n        onChange={this.nomeUsuarioOnChange}\n        placeholder={\"Nome do Usuário\"}\n        />\n        <input \n        value={this.state.valorInputFoto}\n        onChange={this.fotoPerfilOnChange}\n        placeholder={\"Foto do Perfil\"}\n        />\n        <input \n        value={this.state.valorInputImagem}\n        onChange={this.imagemUploadonChange}\n        placeholder={\"Imagem para upload\"}\n        />\n        <button onClick={this.EnviarForm}>\n          Enviar!\n        </button>   \n        <button onClick={Print}>\n          Teste\n          </button>     \n      </ContainerForm>\n  <ContainerPosts>\n    {listaDePostsAtualizada}\n  </ContainerPosts>\n  </ContainerPagina>\n    )\n}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}