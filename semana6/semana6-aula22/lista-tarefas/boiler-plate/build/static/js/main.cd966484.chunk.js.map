{"version":3,"sources":["App.js","index.js"],"names":["TarefaList","styled","ul","Tarefa","li","completa","InputsContainer","div","BotaoRemover","button","Display","Separadores","BotaoEditar","editar","InputEditar","input","BotaoAplicar","App","state","tarefas","id","Date","now","texto","inputValue","filter","inputEditar","onChangeInput","event","setState","target","value","criaTarefa","novaListaDeTarefas","selectTarefa","listaDeTarefas","map","tarefa","onChangeFilter","removerTarefa","funcaoEditar","aplicarMudanca","onChangeEditar","this","localStorage","setItem","JSON","stringify","tarefasString","getItem","listaFiltrada","parse","className","onChange","onClick","React","Component","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.cd966484.chunk.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport './styles.css'\n\nconst TarefaList = styled.ul`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  padding: 0;\n  width: 800px;\n  gap: 50px;\n`\n\nconst Tarefa = styled.li`\n  cursor: pointer;\n  text-align: left;\n  height: 30px;\n  text-decoration: ${({completa}) => (completa ? 'line-through' : 'none')};\n`\n\nconst InputsContainer = styled.div`\n  display: grid;\n  grid-auto-flow: column;\n  gap: 10px;\n`\nconst BotaoRemover = styled.button`\ndisplay: block;\nborder: none;\npadding: 20px;\nbackground-color: #8C3635;\ncolor: white;\nwidth: 30%;\n`\n\nconst Display = styled.div`\ngrid-column: ${({completa}) => (completa ? '2/3' : '1/2')};\nborder: 1px solid black;\nbackground-color: lightsalmon;\ncolor: white;\nfont-weight: bold;\nfont-size: 1.5em;\n`\n\nconst Separadores = styled.div`\ndisplay: grid;\ngrid-template-columns: 1fr 1fr;\ngap: 300px;\n`\n\nconst BotaoEditar = styled.button`\ndisplay: ${({editar}) => (editar ? 'none' : 'block')};\nborder: none;\npadding: 20px 30px 20px 30px;\nbackground-color: #8C3635;\ncolor: white;\nwidth: 30%;\n`\n\nconst InputEditar = styled.input`\ndisplay: ${({editar}) => (editar ? 'inline' : 'none')};\nheight: 54px;\nborder: none;\n`\n\nconst BotaoAplicar = styled.button`\ndisplay: ${({editar}) => (editar ? 'inline' : 'none' )};\nbackground-color: #8C3635;\ncolor: white;\nwidth: 30%;\npadding: 20px;\nborder: none;\n`\n\nclass App extends React.Component {\n    state = {\n      tarefas: [\n        {\n          id: Date.now(),\n          texto: 'Tarefa exemplo1',\n          completa: false,\n          editar: false,\n        },\n        ],\n      inputValue: '',\n      filter: '',\n      inputEditar: '',\n    }\n\n  componentDidUpdate() {\n        \n  }\n\n  componentDidMount() {\n    \n  };\n\n  onChangeInput = (event) => {\n    this.setState({inputValue: event.target.value})\n  }\n\n  criaTarefa = () => {\n    if ((this.state.inputValue !== \"\") && (this.state.inputValue !== \" \")) {\n        const novaTarefa = {\n      id: Date.now(),\n      texto: this.state.inputValue,\n      completa: false,\n      editar: false,\n    }\n    const novaListaDeTarefas = [novaTarefa, ...this.state.tarefas]\n  \n  this.setState({\n    tarefas: novaListaDeTarefas})\n    this.setState({inputValue: \"\"})\n  }}\n\n  selectTarefa = (id) => {\n  const listaDeTarefas = this.state.tarefas.map((tarefa) => {\n    if (id === tarefa.id) {\n      const novaTarefa = {\n        ...tarefa,\n        completa: !tarefa.completa\n      }\n      return novaTarefa\n    } else {\n      return tarefa\n    }\n  })\n  this.setState({tarefas: listaDeTarefas});    \n  }\n\n  onChangeFilter = (event) => {\n    this.setState({filter: event.target.value})\n  }\n\n  removerTarefa = (id) => {\n    const listaDeTarefas = this.state.tarefas.filter((tarefa) => {\n      return id !== tarefa.id\n        }\n    )\n    this.setState({tarefas: listaDeTarefas})\n  }\n\n  funcaoEditar = (id) => {\n    const listaDeTarefas = this.state.tarefas.map((tarefa) => {\n      if (id === tarefa.id) {\n        const novaTarefa = {\n          ...tarefa,\n          editar: !tarefa.editar\n        }\n        return novaTarefa\n      } else {\n        return tarefa\n      }\n    })\n    this.setState({tarefas: listaDeTarefas})\n  }\n\n  aplicarMudanca = (id) => {\n    const listaDeTarefas = this.state.tarefas.map((tarefa) => {\n      if (id === tarefa.id) {\n        const novaTarefa = {\n          ...tarefa,\n          texto: this.state.inputEditar\n        }\n        return novaTarefa\n      } else {\n        return tarefa\n      }\n    })\n    this.setState({tarefas: listaDeTarefas})\n    this.setState({inputEditar: \"\"})\n  }\n\n  onChangeEditar = (event) => {\n    this.setState({inputEditar: event.target.value});\n  }\n\n  render() {\n    const listaDeTarefas = this.state.tarefas\n    localStorage.setItem(\"tarefa\", JSON.stringify(listaDeTarefas))\n    const tarefasString = localStorage.getItem(\"tarefa\");\n    const tarefasObject = JSON.parse(tarefasString);\n\n    const listaFiltrada = tarefasObject\n      .filter(tarefa => {\n        switch (this.state.filter) {\n          case 'pendentes':\n            return !tarefa.completa\n          case 'completas':\n            return tarefa.completa\n          default:\n            return true\n        }\n      })\n\n    return (\n      <div className=\"App\">\n        <h1>Lista de tarefas</h1>\n        <InputsContainer>\n          <input value={this.state.inputValue} onChange={this.onChangeInput}/>\n          <button onClick={this.criaTarefa}>Adicionar</button>\n        </InputsContainer>\n        <br/>\n\n        <InputsContainer>\n          <label>Filtro</label>\n          <select value={this.state.filter} onChange={this.onChangeFilter}>\n            <option value=\"\">Nenhum</option>\n            <option value=\"pendentes\">Pendentes</option>\n            <option value=\"completas\">Completas</option>\n          </select>\n        </InputsContainer>\n        <Separadores>\n        <h2>Não Concluídas</h2><h2>Concluídas</h2>\n        </Separadores>\n        <TarefaList>\n          {listaFiltrada.map(tarefa => {\n            return (\n              <Display\n              completa={tarefa.completa}>\n              <Tarefa\n                onClick={() => this.selectTarefa(tarefa.id)}\n              >\n                {tarefa.texto}\n              </Tarefa>\n              <BotaoRemover \n              onClick={() => this.removerTarefa(tarefa.id)}>\n              Remover</BotaoRemover>\n              <BotaoEditar\n              editar={tarefa.editar}\n              onClick={() => this.funcaoEditar(tarefa.id)}>\n                Editar\n              </BotaoEditar>\n              <InputEditar \n              editar={tarefa.editar}\n              onChange={this.onChangeEditar}\n              />\n              <BotaoAplicar\n              editar={tarefa.editar}\n              onClick={() => this.aplicarMudanca(tarefa.id)}>\n                Aplicar!\n                </BotaoAplicar>\n              </Display>\n            ) \n          })}\n        </TarefaList>\n      </div>\n    )\n  }\n}\n\n\n\nexport default App\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from './App'\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}