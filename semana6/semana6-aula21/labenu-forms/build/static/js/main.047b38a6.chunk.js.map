{"version":3,"sources":["components/Form1.js","components/Form2.js","components/Form3.js","components/MainForm.js","App.js","serviceWorker.js","index.js"],"names":["ContainerForm1","styled","div","Form1","React","Component","CorpoForm2","BotaoEnviar","button","Form2","state","finalizado","botaoFinalizar","setState","this","type","onClick","CorpoForm3","Form3","FullBody","Seletor","select","MainForm","escolaridade","undefined","proximaEtapa","valorEscolaridade","document","getElementById","value","console","log","id","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"sWAGA,IAAMA,EAAiBC,IAAOC,IAAV,KAcLC,EATf,uKAGA,OAAO,kBAACH,EAAD,KACH,6EAJJ,GAA2BI,IAAMC,W,sNCHjC,IAAMC,EAAaL,IAAOC,IAAV,KAGVK,EAAcN,IAAOO,OAAV,KA6BFC,EAvBf,4MACIC,MAAQ,CACJC,YAAY,GAFpB,EAKIC,eAAiB,WACb,EAAKC,SAAS,CAACF,YAAY,KANnC,uDAUQ,OAA8B,IAA1BG,KAAKJ,MAAMC,WACR,kBAACL,EAAD,KACP,+CACA,2BAAOS,KAAK,SACZ,2DACA,2BAAOA,KAAK,SACZ,kBAACR,EAAD,CAAaS,QAASF,KAAKF,gBAA3B,WAGc,kBAAC,EAAD,UAnBtB,GAA2BR,IAAMC,W,sNCVjC,IAAMY,EAAahB,IAAOC,IAAV,KAIVK,EAAcN,IAAOO,OAAV,KAgCFU,EA1Bf,4MACIR,MAAQ,CACJC,YAAY,GAFpB,EAKIC,eAAiB,WACb,EAAKC,SAAS,CAACF,YAAY,KANnC,uDAUQ,OAA8B,IAA1BG,KAAKJ,MAAMC,WACR,kBAACM,EAAD,KACP,qFACA,2BAAOF,KAAK,SACZ,uEACA,gCACI,oDACA,uDACA,kEAEA,kBAAC,EAAD,CAAaC,QAASF,KAAKF,gBAA3B,WAEY,kBAAC,EAAD,UAtBxB,GAA2BR,IAAMC,W,yNCTjC,IAAMc,EAAWlB,IAAOC,IAAV,KAGRkB,EAAUnB,IAAOoB,OAAV,KAkDEC,EA5Cf,4MACIZ,MAAQ,CACJa,kBAAcC,GAFtB,EAKIC,aAAe,WACX,IAAMC,EAAoBC,SAASC,eAAe,gBAAgBC,MAClE,EAAKhB,SAAS,CAACU,aAAcG,IAE7BI,QAAQC,IAAI,EAAKrB,MAAMa,eAT/B,uDAaI,YAAgCC,IAA5BV,KAAKJ,MAAMa,aACR,kBAACJ,EAAD,KACH,qDACA,kDACA,2BAAOJ,KAAK,SACZ,mDACA,2BAAOA,KAAK,SACZ,mDACA,2BAAOA,KAAK,SACZ,0DACJ,kBAACK,EAAD,CAASY,GAAG,gBACR,4BAAQH,MAAM,8BAAd,8BACA,4BAAQA,MAAM,4BAAd,4BACA,4BAAQA,MAAM,8BAAd,8BACA,4BAAQA,MAAM,4BAAd,6BAEA,4BAAQb,QAASF,KAAKW,cAAtB,qBAG2B,+BAA7BX,KAAKJ,MAAMa,aACN,kBAAC,EAAD,MAEwB,6BAA7BT,KAAKJ,MAAMa,aACN,kBAAC,EAAD,MACuB,6BAA7BT,KAAKJ,MAAMa,aACD,kBAAC,EAAD,MACuB,+BAA7BT,KAAKJ,MAAMa,aACL,kBAAC,EAAD,WADV,MAvCL,GAA8BnB,IAAMC,WCNrB4B,E,uKAHb,OAAO,kBAAC,EAAD,U,GAFS7B,IAAMC,WCSJ6B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFd,SAASC,eAAe,SDyHpB,kBAAmBc,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLnB,QAAQmB,MAAMA,EAAMC,c","file":"static/js/main.047b38a6.chunk.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\n\nconst ContainerForm1 = styled.div`\ntext-align: center;\n`  \n\n\nexport class Form1 extends React.Component {\n    render () {\n        \nreturn <ContainerForm1>\n    <h2>Obrigado por responder ao formulário!</h2>\n</ContainerForm1>\n}\n}\n\nexport default Form1","import React from 'react'\nimport styled from 'styled-components'\nimport Form1 from './Form1'\n\n\nconst CorpoForm2 = styled.div`\ntext-align: center;\n` \nconst BotaoEnviar = styled.button`\ndisplay: block;\nmargin: auto;\nmargin-top: 30px;\n`\n\nexport class Form2 extends React.Component {\n    state = {\n        finalizado: false,\n    }\n    \n    botaoFinalizar = () => {\n        this.setState({finalizado: true})\n    }\n\n    render () {\n        if (this.state.finalizado === false) {\n        return <CorpoForm2>\n        <p>1. Qual o Curso?</p>\n        <input type=\"text\" />\n        <p>2. Qual a unidade de ensino?</p>\n        <input type=\"text\" />\n        <BotaoEnviar onClick={this.botaoFinalizar}>Enviar</BotaoEnviar>\n        </CorpoForm2>\n        }\n        else { return <Form1/> }\n    }\n}\n\nexport default Form2","import React from 'react'\nimport styled from 'styled-components'\nimport Form1 from './Form1'\n\nconst CorpoForm3 = styled.div`\ntext-align: center;\n`\n\nconst BotaoEnviar = styled.button`\ndisplay: block;\nmargin: auto;\nmargin-top: 30px;\n`\n\nexport class Form3 extends React.Component {\n    state = {\n        finalizado: false,\n    }\n\n    botaoFinalizar = () => {\n        this.setState({finalizado: true})\n    }\n\n    render () {\n        if (this.state.finalizado === false) {\n        return <CorpoForm3>\n        <p>1. Por que não terminou o curso de graduação?</p>\n        <input type=\"text\" />\n        <p>2. Você fez algum curso complementar?</p>\n        <select>\n            <option>Curso técnico</option>\n            <option>Cursos de inglês</option>\n            <option>Não fiz curso complementar</option>\n        </select>\n            <BotaoEnviar onClick={this.botaoFinalizar}>Enviar</BotaoEnviar>\n        </CorpoForm3>\n        } else { return <Form1/> }\n}\n}\n\nexport default Form3","import React from 'react';\nimport styled from 'styled-components';\nimport Form2 from './Form2'\nimport Form3 from './Form3'\n\nconst FullBody = styled.div`\ntext-align: center;\n`\nconst Seletor = styled.select`\ndisplay: block;\nmargin: auto;\nmargin-bottom: 30px;\n`\n\nexport class MainForm extends React.Component {\n    state = {\n        escolaridade: undefined,\n    }\n\n    proximaEtapa = () => {\n        const valorEscolaridade = document.getElementById(\"escolaridade\").value\n        this.setState({escolaridade: valorEscolaridade})\n\n        console.log(this.state.escolaridade)\n    }   \n\n    render () {\n    if (this.state.escolaridade === undefined) {\n    return <FullBody>      \n        <h1>Etapa1 - Dados Gerais</h1>\n        <p>1. Qual o seu nome?</p>\n        <input type=\"text\" />\n        <p>2. Qual a sua idade?</p>\n        <input type=\"text\" />\n        <p>3. Qual o seu email?</p>\n        <input type=\"text\" />\n        <p>4. Qual a sua escolaridade?</p>\n    <Seletor id=\"escolaridade\">\n        <option value=\"Ensino Médio Incompleto\">Ensino Médio Incompleto</option>\n        <option value=\"Ensino Médio Completo\">Ensino Médio Completo</option>\n        <option value=\"Ensino Superior Incompleto\">Ensino Superior Incompleto</option>\n        <option value=\"Ensino Superior Completo\">Ensino Superior Completo</option>\n    </Seletor>\n        <button onClick={this.proximaEtapa}>Próxima etapa</button>\n    </FullBody>\n\n} if (this.state.escolaridade === (\"Ensino Médio Incompleto\")) {\n    return <Form3/>\n\n} if (this.state.escolaridade === (\"Ensino Superior Completo\")) {\n    return <Form2/>\n}if (this.state.escolaridade === (\"Ensino Médio Completo\")) {\n        return <Form3/>\n    }if (this.state.escolaridade === (\"Ensino Superior Incompleto\")) {\n        return <Form2/>\n    }\n}}\n\nexport default MainForm","import React from 'react';\nimport MainForm from './components/MainForm'\n\nclass App extends React.Component {\nrender () { \n  return <MainForm/>\n}}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}